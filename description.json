{
    "command": "E:\\py\\Scripts\\ludwig train --data_csv House2-Week.csv --model_definition {input_features:[{name : Time,type : text,encoder:rnn }],output_features:[{name : Consumption,type : numerical}]}",
    "commit_hash": "52c745451a69",
    "input_data": "House2-Week.csv",
    "ludwig_version": "0.1.2",
    "model_definition": {
        "combiner": {
            "type": "concat"
        },
        "input_features": [
            {
                "encoder": "parallel_cnn",
                "encoder:rnn": null,
                "level": "word",
                "name": "Time",
                "tied_weights": null,
                "type": "text"
            }
        ],
        "output_features": [
            {
                "clip": null,
                "dependencies": [],
                "loss": {
                    "type": "mean_squared_error",
                    "weight": 1
                },
                "name": "Consumption",
                "reduce_dependencies": "sum",
                "reduce_input": "sum",
                "type": "numerical"
            }
        ],
        "preprocessing": {
            "bag": {
                "fill_value": "",
                "format": "space",
                "lowercase": false,
                "missing_value_strategy": "fill_with_const",
                "most_common": 10000
            },
            "binary": {
                "fill_value": 0,
                "missing_value_strategy": "fill_with_const"
            },
            "category": {
                "fill_value": "<UNK>",
                "lowercase": false,
                "missing_value_strategy": "fill_with_const",
                "most_common": 10000
            },
            "force_split": false,
            "image": {
                "in_memory": true,
                "missing_value_strategy": "backfill",
                "resize_method": "crop_or_pad"
            },
            "numerical": {
                "fill_value": 0,
                "missing_value_strategy": "fill_with_const"
            },
            "sequence": {
                "fill_value": "",
                "format": "space",
                "lowercase": false,
                "missing_value_strategy": "fill_with_const",
                "most_common": 20000,
                "padding": "right",
                "padding_symbol": "<PAD>",
                "sequence_length_limit": 256,
                "unknown_symbol": "<UNK>"
            },
            "set": {
                "fill_value": "",
                "format": "space",
                "lowercase": false,
                "missing_value_strategy": "fill_with_const",
                "most_common": 10000
            },
            "split_probabilities": [
                0.7,
                0.1,
                0.2
            ],
            "stratify": null,
            "text": {
                "char_format": "characters",
                "char_most_common": 70,
                "char_sequence_length_limit": 1024,
                "fill_value": "",
                "lowercase": true,
                "missing_value_strategy": "fill_with_const",
                "padding": "right",
                "padding_symbol": "<PAD>",
                "unknown_symbol": "<UNK>",
                "word_format": "space_punct",
                "word_most_common": 20000,
                "word_sequence_length_limit": 256
            },
            "timeseries": {
                "fill_value": "",
                "format": "space",
                "missing_value_strategy": "fill_with_const",
                "padding": "right",
                "padding_value": 0,
                "timeseries_length_limit": 256
            }
        },
        "training": {
            "batch_size": 128,
            "bucketing_field": null,
            "decay": false,
            "decay_rate": 0.96,
            "decay_steps": 10000,
            "dropout_rate": 0.0,
            "early_stop": 5,
            "epochs": 100,
            "eval_batch_size": 0,
            "gradient_clipping": null,
            "increase_batch_size_on_plateau": 0,
            "increase_batch_size_on_plateau_max": 512,
            "increase_batch_size_on_plateau_patience": 5,
            "increase_batch_size_on_plateau_rate": 2,
            "learning_rate": 0.001,
            "learning_rate_warmup_epochs": 5,
            "optimizer": {
                "beta1": 0.9,
                "beta2": 0.999,
                "epsilon": 1e-08,
                "type": "adam"
            },
            "reduce_learning_rate_on_plateau": 0,
            "reduce_learning_rate_on_plateau_patience": 5,
            "reduce_learning_rate_on_plateau_rate": 0.5,
            "regularization_lambda": 0,
            "regularizer": "l2",
            "staircase": false,
            "validation_field": "combined",
            "validation_measure": "loss"
        }
    },
    "random_seed": 42
}